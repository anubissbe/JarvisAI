version: '3.8'

services:
  # Ollama service for running the LLM
  ollama:
    image: ollama/ollama:latest
    container_name: jarvis-ollama
    volumes:
      - ./ollama-models:/root/.ollama
    ports:
      - "11434:11434"
    restart: unless-stopped
    networks:
      - jarvis-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Uncomment the following for GPU support
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: all
    #           capabilities: [gpu]

  # Open-WebUI for web interface
  open-webui:
    image: ghcr.io/open-webui/open-webui:latest
    container_name: jarvis-webui
    volumes:
      - ./open-webui-data:/app/backend/data
    ports:
      - "3000:8080"
    restart: unless-stopped
    environment:
      - OLLAMA_API_BASE_URL=http://ollama:11434/api
      - WEBUI_AUTH=false
    depends_on:
      ollama:
        condition: service_healthy
    networks:
      - jarvis-network

  # Python backend for Jarvis
  jarvis-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jarvis-backend
    volumes:
      - ./jarvis-data:/root/.jarvis
    ports:
      - "8000:8000"
    restart: unless-stopped
    depends_on:
      - ollama
    networks:
      - jarvis-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Chroma DB for vector storage
  chroma-db:
    image: ghcr.io/chroma-core/chroma:latest
    container_name: jarvis-chroma
    volumes:
      - ./chroma-data:/chroma/chroma
    environment:
      - CHROMA_API_IMPL=rest
      - PERSIST_DIRECTORY=/chroma/chroma
    ports:
      - "8001:8000"
    networks:
      - jarvis-network

# Define a custom network for container communication
networks:
  jarvis-network:
    driver: bridge