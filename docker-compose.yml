version: '3.8'

services:
  # Ollama LLM service
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    volumes:
      - ./volumes/ollama:/root/.ollama
    ports:
      - "11434:11434"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
              count: all
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - jarvis-network

  # Web UI for interacting with the model
  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    restart: unless-stopped
    volumes:
      - ./volumes/open-webui:/app/backend/data
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - SECRET_KEY=${WEBUI_SECRET_KEY:-supersecretkey}
    ports:
      - "3000:8080"
    depends_on:
      - ollama
    networks:
      - jarvis-network

  # Neo4j Knowledge Graph Database
  neo4j:
    image: neo4j:5.18.0
    container_name: neo4j
    restart: unless-stopped
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD:-password}
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_memory_heap_initial__size=1G
      - NEO4J_dbms_memory_heap_max__size=2G
    volumes:
      - ./volumes/neo4j/data:/data
      - ./volumes/neo4j/logs:/logs
      - ./volumes/neo4j/import:/import
      - ./volumes/neo4j/plugins:/plugins
    networks:
      - jarvis-network
    healthcheck:
      test: ["CMD-SHELL", "wget -O /dev/null -q http://localhost:7474 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Document Processor for the RAG system
  document-processor:
    build:
      context: ./document_processor
      dockerfile: Dockerfile
    container_name: document-processor
    restart: unless-stopped
    volumes:
      - ./volumes/processed_documents:/app/processed_documents
      - ./volumes/uploads:/app/uploads
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-password}
    depends_on:
      - ollama
      - neo4j
    networks:
      - jarvis-network

  # Speech-to-Text Service
  speech-service:
    build:
      context: ./speech_service
      dockerfile: Dockerfile
    container_name: speech-service
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - ./volumes/audio:/app/audio
    networks:
      - jarvis-network

  # Ollama API Proxy for handling concurrent requests
  ollama-proxy:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    container_name: ollama-proxy
    restart: unless-stopped
    ports:
      - "11435:11435"
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
    depends_on:
      - ollama
    networks:
      - jarvis-network

  # ChromaDB for semantic memory
  chromadb:
    image: chromadb/chroma:latest
    container_name: chromadb
    restart: unless-stopped
    environment:
      - ALLOW_RESET=true
      - ANONYMIZED_TELEMETRY=false
      - CHROMA_SERVER_AUTH_CREDENTIALS=${CHROMA_SERVER_AUTH_CREDENTIALS:-admin:admin}
      - CHROMA_SERVER_AUTH_CREDENTIALS_PROVIDER=chromadb.auth.basic.BasicAuthCredentialsProvider
      - PERSIST_DIRECTORY=/chroma/data
    volumes:
      - ./volumes/chromadb:/chroma/data
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - jarvis-network

# Shared network for all services
networks:
  jarvis-network:
    driver: bridge