version: '3.9'
services:
  # Ollama service - Language Model server running on V100 GPUs
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    volumes:
      - ollama:/root/.ollama
    ports:
      - "11434:11434"
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 2
              capabilities: [gpu]
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_NUM_PARALLEL=4
      - OLLAMA_MAX_LOADED_MODELS=2
      - OLLAMA_FLASH_ATTENTION=1
      - OLLAMA_KV_CACHE_TYPE=q8_0
      - OLLAMA_CONTEXT_LENGTH=262144
      - CUDA_VISIBLE_DEVICES=0,1
    shm_size: 16gb

  # OpenWebUI service - Web interface with RAG capabilities
  open-webui:
    image: ghcr.io/open-webui/open-webui:cuda
    container_name: open-webui
    depends_on:
      - ollama
      - milvus-standalone
      - ollama-proxy
    volumes:
      - open-webui-data:/app/backend/data
    ports:
      - "3000:8080"
    environment:
      # Base Configuration
      - OLLAMA_BASE_URL=http://ollama-proxy:11435
      - WEBUI_AUTH=True
      - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY:-your_secure_secret_key_here}

      # RAG Configuration
      - ENABLE_RAG=True
      - VECTOR_DB=milvus
      - MILVUS_URI=http://milvus-standalone:19530
      - MILVUS_DB=default
      - MILVUS_TOKEN=root:Milvus
      - MILVUS_INDEX_TYPE=HNSW
      - MILVUS_METRIC_TYPE=COSINE

      # Embedding Configuration
      - EMBEDDING_MODEL=nomic-embed-text
      - EMBEDDING_PROVIDER=ollama
      - EMBEDDING_MODEL_ENDPOINT=http://ollama:11434
      - EMBEDDING_DIMENSIONS=768
      - EMBEDDING_BATCH_SIZE=32

      # Override conflicting settings
      - USE_EMBEDDING_MODEL_DOCKER=
      - RAG_EMBEDDING_MODEL=nomic-embed-text
      - RAG_EMBEDDING_ENGINE=ollama

      # Disable HuggingFace attempts
      - HF_TOKEN=
      - HF_API_URL=
      - DISABLE_REMOTE_EMBEDDING=true
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 2
              capabilities: [gpu]
    restart: unless-stopped

  # Ollama Proxy with Neo4j integration
  ollama-proxy:
    build: ./proxy
    container_name: ollama-proxy
    depends_on:
      - ollama
      - neo4j
    ports:
      - "11435:11435"
    volumes:
      - ./hybrid_search:/opt/jarvis/hybrid_search
      - ./proxy:/app
    environment:
      - NEO4J_PASSWORD=Loebas0128
    restart: unless-stopped

  # Neo4j service - Graph database
  neo4j:
    image: neo4j:2025.04.0
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/Verysecretpassword
      - NEO4J_dbms_memory_heap_max__size=4G
      - NEO4J_dbms_memory_pagecache_size=2G
    volumes:
      - neo4j-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "-q", "http://localhost:7474"]
      interval: 10s
      timeout: 10s
      retries: 5

  # Milvus service - Vector database for embeddings storage
  milvus-standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.3.3
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - milvus-data:/var/lib/milvus
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped

  # etcd - Metadata storage for Milvus
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
    volumes:
      - etcd-data:/etcd
    command: etcd -advertise-client-urls=http://etcd:2379 -listen-client-urls http://0.0.0.0:2379
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  # MinIO - Object storage for Milvus
  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - minio-data:/minio_data
    command: minio server /minio_data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  # Document processor service
  document-processor:
    build:
      context: .
      dockerfile: Dockerfile.document-processor
    container_name: document-processor
    volumes:
      - ./volumes/processed_documents:/processed
      - open-webui-data:/app/backend/data
      - ./hybrid_search:/opt/jarvis/hybrid_search
      - ./logs:/var/log/jarvis
      - ./tmp:/tmp/jarvis_sessions
      - ./config:/app/config
    env_file:
      - ./jarvis_kb_config.env
    depends_on:
      - neo4j
      - milvus-standalone
      - ollama
    restart: unless-stopped

# Persistent volumes for all services
volumes:
  ollama:
  open-webui-data:
  neo4j-data:
  etcd-data:
  minio-data:
  milvus-data:
