{"file": "/app/backend/data/uploads/63d6b5be-cbe6-4831-b1e1-e7b3d58d3f8e_howto-urllib2.pdf", "title": "63d6b5be-cbe6-4831-b1e1-e7b3d58d3f8e_howto-urllib2.pdf", "kb_id": "96c3b9a4-10c1-400c-9d22-3e71cb8ed7fb", "processed_date": "2025-05-18T16:34:29.373134", "topics": ["Python", "Go", "Library", "Function", "Object", "Method", "Variable", "Exception", "Error", "Test", "Person", "ContactInfo", "EducationInfo", "RelationshipInfo", "LegalInfo", "Person: Name", "ContactInfo: Email", "ContactInfo: Phone", "ContactInfo: Website", "EducationInfo: Grade", "RelationshipInfo: Acquaintance", "LegalInfo: Legal_Doc"], "entities": ["and password for the realm included as", "and password for", "and password", "and optionally", "to illustrate using urllib", "to passwords and usernames", "docs@python.org", "password@example.com", "2025", "2616", "4322", "404", "403", "401", "2616", "300", "100", "299", "400", "599", "2616", "100", "101", "200", "201", "202", "203", "204", "205", "206", "300", "301", "302", "303", "304", "305", "307", "400", "401", "402", "403", "404", "405", "406", "407", "408", "409", "410", "411", "412", "413", "414", "415", "416", "417", "500", "501", "502", "503", "504", "505", "404", "401", "8080", "2616", "http://python.org/", "http://python.org/", "http://python.org/", "http://www.someserver.com/cgi-bin/register.cgi", "http://www.example.com/example.cgi", "http://www.someserver.com/cgi-bin/register.cgi", "http://www.pretend_server.org", "http://www.python.org/fish.html", "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd", "http://example.com/foo/", "http://example.com/", "http://www.voidspace.org.uk", "A", "B", "A", "A", "A", "B", "A", "A", "B", "A", "B", "B", "A", "A", "A", "B", "B", "A", "A", "B", "B", "A", "A", "A", "B", "A", "A", "A", "B", "A", "B", "A", "A", "A", "B", "A", "B", "B", "A", "A", "B", "A", "Python A", "his case, the exception raised will have a \u2018reason\u2019 attribute, which is a tuple containing an", "metadata\u201d) about the data or about the request itself, to", "metimes you want to send data to a URL (often the URL will refer to a CGI (Common Gateway Interface) script", "metimes the status code indicates that the", "know what the realm is (from the authentication header sent by the server), then", "lease 3", "will need some understanding of the HyperText Transfer Protocol", "will be that simple (note that instead of an \u2018http:\u2019 URL we could have used a URL starting with", "will refer to a CGI (Common Gateway Interface) script", "lease, e", "will have a \u2018reason\u2019 attribute, which is a tuple containing an", "will handle some of these responses for you (for example,", "will handle", "will raise an HTTPError ", "will have an integer \u2018code\u2019 attribute, which corresponds to the error sent by the server", "will usually only see error codes in the 400\u2013599 range", "lease continue '),", "will not help '),", "willalsocatch an HTTPError ", "will want to create openers if you want to fetch URLs with specific handlers installed, for example to get an", "will use the opener you have installed", "will use the HTTPBasicAuthHandler ", "will be supplied in the absence of you providing an alternative combination for a specific realm", "will also match", "will auto-detect your proxy settings and use those", "will be ignored if a variable REQUEST_METHOD is set; see the documentation on getproxies() "]}